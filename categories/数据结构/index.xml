<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据结构 on 北极狼徒</title>
    <link>/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
    <description>Recent content in 数据结构 on 北极狼徒</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 05 Jan 2019 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>树结构及其应用场景总结</title>
      <link>/blog/data_struct_trees_conclusion/</link>
      <pubDate>Sat, 05 Jan 2019 00:00:00 +0800</pubDate>
      
      <guid>/blog/data_struct_trees_conclusion/</guid>
      <description>Table of Contens  数据结构 &amp;ndash; 树  二叉树 二叉查找树 平衡二叉树 B树 B+树 B*树 字典树/Trie树 基数树/radix树  树的应用 参考  数据结构 &amp;ndash; 树 树是学习数据结构必学的一种结构之一，其重要性不言而喻。本文对自己已知的树结构总结，如若有错，请在评论去留言，鄙人及时修改，以免误导别人。本文涉及的树结构包括：二叉树、二叉搜索树、基数树等。
二叉树 二叉树是树家族结构中最为基础的一种数据结构。
定义  每个结点最多两个子结点，即度 &amp;lt;= 2 子结点区分为左右子结点，顺序不能反过来，否则为不同的二叉树 第 i 层最多有 2i-1 个结点 深度为 k 的二叉树最多有 2k - 1个结点，即满二叉树 对任一二叉树，叶结点数n0 和 度为2的结点数 n2 的关系式为：n0 = n2 + 1  示例   特殊二叉树 在二叉树中存在满二叉树和完全二叉树两种特殊树结构。
 满二叉树
 定义
除叶结点外，其它结点都有两个结点，即度为2。此时的二叉树结点数达到最大值：2h - 1。(h 为深度)
 性质
 叶结点数： 2h 第 k 层的结点数是：2k-1 总结点数是：2h - 1，且一定是奇数(废话)   完全二叉树</description>
    </item>
    
  </channel>
</rss>