<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>textor on 北极狼徒</title>
    <link>/tags/textor/</link>
    <description>Recent content in textor on 北极狼徒</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 30 Jan 2019 11:06:21 +0800</lastBuildDate>
    
	<atom:link href="/tags/textor/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>动手写编辑器（二） ~ 输入和输出</title>
      <link>/post/write_textor_2/</link>
      <pubDate>Wed, 30 Jan 2019 11:06:21 +0800</pubDate>
      
      <guid>/post/write_textor_2/</guid>
      <description>Table of Contens  窗口  Buffer 窗口 size 波浪线 欢迎界面  输入  Ctrl+q 退出 移动光标 文本内容  输出  显示 buffer 刷新屏幕  总结  窗口 说到终端编辑器， vim 应该是用的最多的吧。在所有有关 Linux 基础的书本都会介绍 vi/vim 编辑器。因此在这里我将模仿 vim 编辑界面。话不多说，先看一下 vim 的启动界 面吧。
  左边的波浪号表示没有内容的行，中间显示打开编辑器时的欢迎界面以及基本命令信息。现 在就模仿 vim 的界面，实现一个简单的编辑器。下面我们来将这个界面画出来。
Buffer Buffer 是编辑器的主体部分，所有的信息都只能通过 buffer 显示。 buffer 里面是一串 很长的字符串，其中有些是转义序列表示终端的一些命令，在后续需要用到的时候再讲解。 说起字符串处理，应该是最常见的操作了，用 C 写的话可能需要自己管理字符串，比如申 请内存，释放内存等，不需要多线程，因此不需要考虑线程安全。我们直接使用 C++ 的 string 数据类型即可。
struct editor{ ... /* buffer */ std::string abuf_; .</description>
    </item>
    
  </channel>
</rss>