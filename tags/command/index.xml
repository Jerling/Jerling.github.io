<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>command on 北极狼徒</title>
    <link>/tags/command/</link>
    <description>Recent content in command on 北极狼徒</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 Mar 2019 09:32:42 +0800</lastBuildDate>
    
	<atom:link href="/tags/command/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>命令行艺术(3) ~~ 文件及数据处理篇</title>
      <link>/post/the_art_of_command_03/</link>
      <pubDate>Sun, 10 Mar 2019 09:32:42 +0800</pubDate>
      
      <guid>/post/the_art_of_command_03/</guid>
      <description>查找  文件查找 内容查找  数据处理  文件处理 内容处理 数据统计  文件拷贝 杂项  查找 文件查找  在当前目录下通过文件名查找一个文件，使用类似于这样的命令：find . -iname &#39;*something*&#39;  name : 文件名 type : 文件类型 regex : 正则查找 size : 文件大小 perm : 权限 [a|c|m]time &amp;hellip; 还有很多，只列举了常用的几个选项  在所有路径下通过文件名查找文件，使用 locate something，它是在数据库中搜索，比 find 快；但是可能需要 update 更新数据库。 程序名搜索，使用 whereis  -b : 只搜索二进制文件 -m : 只搜索 man 说明文件 -s : 只搜索源代码文件  在 PATH 路径下，which 搜索系统命令，并返回第一个搜索结果 查看命令是系统自带的，还是外部命令，加上 -p 参数相当于 which 命令  内容查找  使用 ag 在源代码或数据文件里检索（grep -r 同样可以做到，但相比之下 ag 更加先进）。还有其它的替代软件如：rg、pt 等  数据处理 文件处理  将 HTML 转为文本：lynx -dump -stdin 。 Markdown，HTML，以及所有文档格式之间的转换，试试 pandoc。 当要处理棘手的 XML 时候，xmlstarlet 算是上古时代流传下来的神器。 使用 jq 处理 JSON。 使用 shyaml 处理 YAML。 要处理 Excel 或 CSV 文件的话，csvkit 提供了 in2csv，csvcue，csvjoin，csvgrep 等方便易用的工具。 当要处理 Amazon S3 相关的工作的时候，s3cmd 是一个很方便的工具而 s4cmd 的效率更高。Amazon 官方提供的 aws 以及 saws 是其他 AWS 相关工作的基础，值得学习。 拆分文件可以使用 split（按大小拆分）和 csplit（按模式拆分）。 使用 zless、zmore、zcat 和 zgrep 对压缩过的文件进行操作。</description>
    </item>
    
    <item>
      <title>命令行艺术 (2) ~~ 日常使用篇</title>
      <link>/post/the_art_of_command_02/</link>
      <pubDate>Sat, 02 Mar 2019 09:43:05 +0800</pubDate>
      
      <guid>/post/the_art_of_command_02/</guid>
      <description>Table of Contens  常用快健键  一般快捷键 编辑器相关 历史命令 路径相关  少用但非常有用的命令  管理相关 使用别名 同步配置 脚本相关 善用文档 分屏管理 远程登录 杂项   常用快健键 一般快捷键 通过按 Tab 键实现自动补全参数，使用 ctrl-r 搜索命令行历史 记录（按下按键之后，输入关键字便可以搜索，重复按下 ctrl-r 会向后查找匹配项， 按下 Enter 键会执行当前匹配的命令，而按下右方向键会将匹配项放入当前行中，不 会直接执行，以便做出修改）。
可以按下 ctrl-w 删除键入的最后一个单词， ctrl-u 可以删除行内光标所在位置 之前的内容， alt-b 和 alt-f 可以以单词为单位移动光标， ctrl-a 可以将光标 移至行首， ctrl-e 可以将光标移至行尾， ctrl-k 可以删除光标至行尾的所有内容， ctrl-l 可以清屏。键入 man readline 可以查看 Bash 中的默认快捷键。内容有很 多，例如 alt-. 循环地移向前一个参数，而 alt-* 可以展开通配符
编辑器相关 可以执行 set -o vi 来使用 vi 风格的快捷键，而执行 set -o emacs 可以把它改回来。 为了便于编辑长命令，在设置默认编辑器后（例如 export EDITOR=vim）， ctrl-x ctrl-e 会打开一个编辑器来编辑当前输入的命令。在 vi 风格下快捷键则是 escape-v 。</description>
    </item>
    
    <item>
      <title>命令行艺术 (1) ~~ 基础篇</title>
      <link>/post/the_art_of_command_01/</link>
      <pubDate>Sun, 24 Feb 2019 09:54:13 +0800</pubDate>
      
      <guid>/post/the_art_of_command_01/</guid>
      <description>Table of Contens  什么命令行  让命令行人性化  基础命令  私人神器zsh 熟悉环境 帮助命令 编辑命令 重定向 通配符 任务管理工具 远程登录 文件管理工具 网络管理工具 版本控制 正则表达式 软件包管理工具  总结  什么命令行 每个学习计算机的人都应该知道命令行，因为它是计算机相关从事人员比不可少的一项技能。 通常所说的命令行就是在 linux 下使用 shell 或者 windows 下的 powershell 输入的命令进行工作的过程，这些可以是系统程序或者用户程序，也可以为指向可执行文件 的链接文件。
让命令行人性化 这里主要说的汉化，可以通过发行版对应的软件包管理工具(apt-get, yum, pacman等)安装对应的汉化包，然后将系统 语言设置为中文即可。
基础命令 私人神器zsh 在本人之前的 动手写 手把手实现一个 LINUX SHELL 中介绍到常用的 shell . 这一系列 的命令将会在 zsh 下完成，几乎所有的基础教程都用的 bash。但是 zsh 配合 oh-my-zsh 可以让效率提升数倍。这对于私人工作环境是不错的选择，但是如果在 公用服务器工作的还是使用 bash 吧。
 声明：这里没有上下之分，只是本人用 zsh 用习惯了，而且有现成提升效率的配置 oh-my-zsh。节省 打造得心称手 shell 工具的时间。</description>
    </item>
    
  </channel>
</rss>