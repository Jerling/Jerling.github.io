<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>text_editor on 北极狼徒</title>
    <link>/tags/text_editor/</link>
    <description>Recent content in text_editor on 北极狼徒</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 20 Jan 2019 18:31:32 +0800</lastBuildDate>
    
	<atom:link href="/tags/text_editor/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>动手写编辑器(一) ~ 文本模式</title>
      <link>/post/write_textor_1/</link>
      <pubDate>Sun, 20 Jan 2019 18:31:32 +0800</pubDate>
      
      <guid>/post/write_textor_1/</guid>
      <description>Table of Contens  写作动机 规范模式 文本模式 设置属性  本地模式标志 ~~ c_lflag 输入模式标志 ~~ c_iflag 输出模式标志 ~~ c_oflag 杂项标志  开启和关闭文本模式 总结  写作动机 因为是该项目的第一篇文章，在这里简单介绍实现该项目的动机。作为程序员，动手能力是 第一位的，不管看了多少经典书籍、亦或浏览过多少源码。如果没有自己动手去实现，这些 东西都不是自己的。本人可以说是一个编辑器爱好者吧，前前后后折腾过 N 多编辑器： 如编辑器之神 Vim, 神的编辑器 Emacs, 性感无比 Sublime text 以及宇宙最强 VSCode. 最终本人留下了 emacs 和 VSCode , 前者用于编程和写作，后者用于调试程序。 用了这么多的编辑器，是时候自己实现一个了。当然并不打算参与竞争，单纯为了学习。再 说了，目前我的 emacs+doom 已经能处理各种写作任务，而且我很享受在上面码字，就想 弹钢琴一样，无须鼠标干扰，安心写作。Ok~ 让我们开始一段奇妙的旅行吧～～～
规范模式 我们平常使用的交互式命令终端就是所谓的 canonical mode。简单来说就是，它每次接收一行文本， 允许通过退格键进行删除输入的内容，以 enter 作为发送触发键发送给程序，然后程序 对其进行响应。这种模式大多用于交互命令处理中。但是用在文本编辑器(如 nano)中 显然是不合适，因为它要处理的是每一个按键(包括 enter)。
文本模式 文本模式(raw mode)可以不处理 enter 触发的发送功能，而是把其作为键值进行处理。这个才 接近文本编辑器的要求。但是呢，终端默认都是规范模式，而且这两个模式之间的差别不仅 仅是这一个，而且要完全切换会涉及很多的标志位的设置。下面我们就一步步来让终端来实 现期望的文本模式。</description>
    </item>
    
  </channel>
</rss>