<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 北极狼徒</title>
    <link>/post/</link>
    <description>Recent content in Posts on 北极狼徒</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 17 May 2019 21:57:43 +0800</lastBuildDate>
    
	<atom:link href="/post/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C&#43;&#43; 对象模型 — 构造语义学</title>
      <link>/post/cpp_object_models_ch02/</link>
      <pubDate>Fri, 17 May 2019 21:57:43 +0800</pubDate>
      
      <guid>/post/cpp_object_models_ch02/</guid>
      <description>默认构造函数 在ARM(Annotated Reference Manual) 中：默认构造函数在 需要的 时候由编译器产生 产生出来。这里的需要为编译器需要，而不是程序需要，程序需</description>
    </item>
    
    <item>
      <title>C&#43;&#43; 对象模型 — 关于对象</title>
      <link>/post/cpp_object_models_ch01/</link>
      <pubDate>Tue, 07 May 2019 23:36:30 +0800</pubDate>
      
      <guid>/post/cpp_object_models_ch01/</guid>
      <description>关于对象 面向过程 在 C 语言中, 我们通常将 *数据* 和 *处理数据的操作(函数)* 分开声明, 也就是说语言本身没有支持 *数据和函数* 之间的关联性. 这种</description>
    </item>
    
    <item>
      <title>关于内存配置器的一些总结</title>
      <link>/post/about_memory_allcates/</link>
      <pubDate>Fri, 26 Apr 2019 20:12:02 +0800</pubDate>
      
      <guid>/post/about_memory_allcates/</guid>
      <description>概述 内存管理 我们通常说的内存管理是操作系统内核提供的功能之一，也就是对于虚拟内存的管理。可以 分为以下几个不同的层次。 操作系统： 内核对虚拟内存</description>
    </item>
    
    <item>
      <title>命令行艺术(3) ~~ 文件及数据处理篇</title>
      <link>/post/the_art_of_command_03/</link>
      <pubDate>Sun, 10 Mar 2019 09:32:42 +0800</pubDate>
      
      <guid>/post/the_art_of_command_03/</guid>
      <description>查找 文件查找 内容查找 数据处理 文件处理 内容处理 数据统计 文件拷贝 杂项 查找 文件查找 在当前目录下通过文件名查找一个文件，使用类似于这样的命令：fin</description>
    </item>
    
    <item>
      <title>命令行艺术 (2) ~~ 日常使用篇</title>
      <link>/post/the_art_of_command_02/</link>
      <pubDate>Sat, 02 Mar 2019 09:43:05 +0800</pubDate>
      
      <guid>/post/the_art_of_command_02/</guid>
      <description>Table of Contens 常用快健键 一般快捷键 编辑器相关 历史命令 路径相关 少用但非常有用的命令 管理相关 使用别名 同步配置 脚本相关 善用文档 分屏管理 远程登录 杂项 常用快健</description>
    </item>
    
    <item>
      <title>命令行艺术 (1) ~~ 基础篇</title>
      <link>/post/the_art_of_command_01/</link>
      <pubDate>Sun, 24 Feb 2019 09:54:13 +0800</pubDate>
      
      <guid>/post/the_art_of_command_01/</guid>
      <description>Table of Contens 什么命令行 让命令行人性化 基础命令 私人神器zsh 熟悉环境 帮助命令 编辑命令 重定向 通配符 任务管理工具 远程登录 文件管理工具 网络管理工具 版本控制</description>
    </item>
    
    <item>
      <title>关于对象那些事儿 ~~ 继承</title>
      <link>/post/about_cpp_inherits/</link>
      <pubDate>Fri, 22 Feb 2019 20:07:56 +0800</pubDate>
      
      <guid>/post/about_cpp_inherits/</guid>
      <description>Table of Contens 关于继承 何为对象 何为继承 public 继承 public 继承权限 实例 protected 继承 protected 继承权限 实例 private 继承 protected 继承权限 实例 虚继承 实例 虚继承与虚函数 总结 关于继承 随着软件功能的</description>
    </item>
    
    <item>
      <title>动手写编辑器（四） ~ 文本编辑器</title>
      <link>/post/write_textor_4/</link>
      <pubDate>Sun, 17 Feb 2019 16:51:33 +0800</pubDate>
      
      <guid>/post/write_textor_4/</guid>
      <description>Table of Contens 文本编辑器 插入字符 重新映射方向键 按键处理 插入字符 删除字符 删除字符 添加行 换行 修改提示 保存文件 退出提示 另存为 效果 总结 参考 文本编辑器 在之前的</description>
    </item>
    
    <item>
      <title>动手写编辑器 (三) ~ 文件查看器</title>
      <link>/post/write_textor_3/</link>
      <pubDate>Sat, 02 Feb 2019 13:27:35 +0800</pubDate>
      
      <guid>/post/write_textor_3/</guid>
      <description>Table of Contens 状态栏 腾出空间 写入 buffer 消息框 腾出空间 滞留时间 写入消息 写入 buffer 滚动 垂直滚动 水平滚动 修改边界检查 写入 buffer 总结 参考 状态栏 熟悉 vim 的朋友都知道, vim 有一</description>
    </item>
    
    <item>
      <title>动手写编辑器（二） ~ 输入和输出</title>
      <link>/post/write_textor_2/</link>
      <pubDate>Wed, 30 Jan 2019 11:06:21 +0800</pubDate>
      
      <guid>/post/write_textor_2/</guid>
      <description>Table of Contens 窗口 Buffer 窗口 size 波浪线 欢迎界面 输入 Ctrl+q 退出 移动光标 文本内容 输出 显示 buffer 刷新屏幕 总结 参考 窗口 说到终端编辑器， vim 应该是用的最多的吧。在所有有关 Linux 基</description>
    </item>
    
    <item>
      <title>动手写编辑器(一) ~ 文本模式</title>
      <link>/post/write_textor_1/</link>
      <pubDate>Sun, 20 Jan 2019 18:31:32 +0800</pubDate>
      
      <guid>/post/write_textor_1/</guid>
      <description>Table of Contens 写作动机 规范模式 文本模式 设置属性 本地模式标志 ~~ c_lflag 输入模式标志 ~~ c_iflag 输出模式标志 ~~ c_oflag 杂项标志 开启和关闭文本模式 总结 参考 写作动机 因为是该项目</description>
    </item>
    
    <item>
      <title>手把手实现一个 Linux shell</title>
      <link>/post/writh_shell_with_cpp/</link>
      <pubDate>Sat, 19 Jan 2019 20:17:47 +0800</pubDate>
      
      <guid>/post/writh_shell_with_cpp/</guid>
      <description>Table of Contens Linux shell 基本知识 shell 工作流程 shell 实现 可执行程序该有的样子 一探循环体究竟 解剖循环体 总结 参考 Linux shell 基本知识 目前市场上主要有三大主流操作系统，除了 windows 系</description>
    </item>
    
    <item>
      <title>树结构及其应用场景总结</title>
      <link>/post/data_struct_trees_conclusion/</link>
      <pubDate>Sat, 05 Jan 2019 00:00:00 +0800</pubDate>
      
      <guid>/post/data_struct_trees_conclusion/</guid>
      <description>Table of Contens 数据结构 &amp;ndash; 树 二叉树 二叉查找树 平衡二叉树 B树 B+树 B*树 字典树/Trie树 基数树/radix树 树的应用 参考 数据结构 &amp;ndash; 树 树是学习数据结构必</description>
    </item>
    
    <item>
      <title>Gentoo 系统初探</title>
      <link>/post/gentoo_linux_first_try/</link>
      <pubDate>Sat, 22 Dec 2018 00:00:00 +0800</pubDate>
      
      <guid>/post/gentoo_linux_first_try/</guid>
      <description>Table of Contens 安装准备 系统镜像 虚拟软件 启动系统 配置网络 准备磁盘 创建分区 创建文件系统 挂载根分区 安装 stage3 配置编译选项 基本系统 镜像站点 复制 DNS 信息 挂载必要的文</description>
    </item>
    
  </channel>
</rss>